apply plugin: 'kotlin'
apply plugin: 'java-library'
apply plugin: 'jacoco'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'org.jlleitschuh.gradle.ktlint'
apply plugin: 'io.gitlab.arturbosch.detekt'
apply plugin: 'maven-publish'
apply plugin: 'signing'

dependencies {
    api project(path: ':jipp-core')
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
}

compileKotlin {
    kotlinOptions {
        allWarningsAsErrors = true
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        allWarningsAsErrors = true
        jvmTarget = "1.8"
    }
}

ktlint {
    version = "$ktlint_version"
}

afterEvaluate {
    check.dependsOn ktlintCheck
}

test.finalizedBy jacocoTestReport

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }

    afterEvaluate {
        getClassDirectories().setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/AutoValue_**'])
        }))
    }
}

dokka {
    outputDirectory = "$buildDir/javadoc"
    outputFormat = "javadoc"
    configuration {
        externalDocumentationLink {
            url = new URL("https://docs.oracle.com/javase/8/docs/api/")
            packageListUrl = new URL("https://docs.oracle.com/javase/8/docs/api/package-list")
        }
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.name
            from components.java

            pom {
                name = project.name
                description 'PWG-Raster and PCLm conversions'
                url = 'https://github.com/hpinc/jipp'
                organization {
                    name = 'HP Development Company, L.P.'
                    url = 'https://github.com/HPInc'
                }
                issueManagement {
                    system = 'GitHub'
                    url = 'https://github.com/HPInc/jipp/issues'
                }
                licenses {
                    license {
                        name ='MIT'
                        url ='https://github.com/HPInc/jipp/blob/master/LICENSE.md'
                        distribution ='repo'
                    }
                }
                scm {
                    url = 'https://github.com/HPInc/jipp'
                    connection = 'scm:git:git://github.com/HPInc/jipp.git'
                    developerConnection = 'scm:git:ssh://git@github.com:HPInc/jipp.git'
                }
            }
        }
    }

    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username project.ext.properties.sonatypeUsername
                password project.ext.properties.sonatypePassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
