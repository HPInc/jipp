// Copyright 2018 HP Development Company, L.P.
// SPDX-License-Identifier: MIT
//
// DO NOT MODIFY. Code is auto-generated by genTypes.py. Content taken from registry at
// https://www.iana.org/assignments/ipp-registrations/ipp-registrations.xml, updated on 2021-10-14
@file:Suppress("MaxLineLength", "WildcardImport")

package com.hp.jipp.model

import com.hp.jipp.encoding.* // ktlint-disable no-wildcard-imports

/**
 * Data object corresponding to a "media-size-supported" collection as defined in:
 * [PWG5100.7](https://ftp.pwg.org/pub/pwg/candidates/cs-ippjobext20-20190816-5100.7.pdf).
 */
@Suppress("RedundantCompanionReference", "unused")
data class MediaSizeSupported
constructor(
    var xDimension: IntOrIntRange? = null,
    var yDimension: IntOrIntRange? = null,
) : AttributeCollection {

    /** Construct an empty [MediaSizeSupported]. */
    //constructor() : this(null)
    constructor(x: Int? = null, y: Int? = null) :
            this(x?.let { IntOrIntRange(x) }, y?.let {IntOrIntRange(y)})

    /** Produce an attribute list from members. */
    override val attributes: List<Attribute<*>>
        get() = listOfNotNull(
            xDimension?.let { MediaSizeSupported.xDimension.of(it) },
            yDimension?.let { MediaSizeSupported.yDimension.of(it) },
        )

    /** Defines types for each member of [MediaSizeSupported]. */
    companion object : AttributeCollection.Converter<MediaSizeSupported> {
        override fun convert(attributes: List<Attribute<*>>): MediaSizeSupported =
            MediaSizeSupported(
                extractOne(attributes, xDimension),
                extractOne(attributes, yDimension),
            )
        override val cls = MediaSizeSupported::class.java
        @Deprecated("Remove this symbol")
        @JvmField val Types = this
        @JvmField val xDimension = IntOrIntRangeType("x-dimension")
        @JvmField val yDimension = IntOrIntRangeType("y-dimension")
    }
    override fun toString() = "MediaSizeSupported(${attributes.joinToString()})"
}
