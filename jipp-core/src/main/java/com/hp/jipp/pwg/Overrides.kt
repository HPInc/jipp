// Copyright 2018 HP Development Company, L.P.
// SPDX-License-Identifier: MIT
//
// DO NOT MODIFY. Code is auto-generated by genTypes.py. Content taken from registry at
// https://www.iana.org/assignments/ipp-registrations/ipp-registrations.xml, updated on 2018-04-06
@file:Suppress("MaxLineLength", "WildcardImport")

package com.hp.jipp.pwg

import com.hp.jipp.encoding.* // ktlint-disable no-wildcard-imports

/**
 * Data object corresponding to a "overrides" collection as defined in:
 * [PWG5100.6](http://ftp.pwg.org/pub/pwg/candidates/cs-ipppageoverride10-20031031-5100.6.pdf).
 */
@Suppress("RedundantCompanionReference", "unused")
data class Overrides
@JvmOverloads constructor(
    val documentCopies: List<IntRange>? = null,
    val documentNumbers: List<IntRange>? = null,
    val pages: List<IntRange>? = null,
    /** Original parameters received, if any. */
    val _original: List<Attribute<*>>? = null
) : AttributeCollection {

    /** Produce an attribute list from members, or return the [_original] attribute list (if it exists). */
    override val attributes: List<Attribute<*>> by lazy {
        _original ?: listOfNotNull(
            documentCopies?.let { Members.documentCopies.of(it) },
            documentNumbers?.let { Members.documentNumbers.of(it) },
            pages?.let { Members.pages.of(it) }
        )
    }

    /** Type for attributes of this collection */
    class Type(override val name: String) : AttributeCollection.Type<Overrides>(Members)

    /** All member names as strings. */
    object Name {
        /** "document-copies" member name */
        const val documentCopies = "document-copies"
        /** "document-numbers" member name */
        const val documentNumbers = "document-numbers"
        /** "pages" member name */
        const val pages = "pages"
    }

    companion object Members : AttributeCollection.Converter<Overrides> {
        override fun convert(attributes: List<Attribute<*>>): Overrides =
            Overrides(
                extractAll(attributes, documentCopies),
                extractAll(attributes, documentNumbers),
                extractAll(attributes, pages),
                _original = attributes)
        /**
         * "document-copies" member type.
         */
        @JvmField val documentCopies = IntRangeType(Name.documentCopies)
        /**
         * "document-numbers" member type.
         */
        @JvmField val documentNumbers = IntRangeType(Name.documentNumbers)
        /**
         * "pages" member type.
         */
        @JvmField val pages = IntRangeType(Name.pages)
    }
}
