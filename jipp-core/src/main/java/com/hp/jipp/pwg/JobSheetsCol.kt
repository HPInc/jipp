// Copyright 2018 HP Development Company, L.P.
// SPDX-License-Identifier: MIT
//
// DO NOT MODIFY. Code is auto-generated by genTypes.py. Content taken from registry at
// https://www.iana.org/assignments/ipp-registrations/ipp-registrations.xml, updated on 2018-04-06
@file:Suppress("MaxLineLength", "WildcardImport")

package com.hp.jipp.pwg

import com.hp.jipp.encoding.* // ktlint-disable no-wildcard-imports

/**
 * Data object corresponding to a "job-sheets-col" collection as defined in:
 * [PWG5100.3](http://ftp.pwg.org/pub/pwg/candidates/cs-ippprodprint10-20010212-5100.3.pdf),
 * [RFC8011](http://www.iana.org/go/rfc8011).
 */
@Suppress("RedundantCompanionReference", "unused")
data class JobSheetsCol
@JvmOverloads constructor(
    /** May contain any keyword from [JobSheet] or a name. */
    val jobSheets: String? = null,
    /** May contain any keyword from [Media] or a name. */
    val media: String? = null,
    val mediaCol: MediaCol? = null,
    /** Encoded form, if known. */
    val _encoded: List<Attribute<*>>? = null
) : AttributeCollection {

    /** Produce an attribute list from members, or return the original [_encoded] attribute list if present. */
    override val attributes: List<Attribute<*>> by lazy {
        _encoded ?: listOfNotNull(
            jobSheets?.let { Members.jobSheets.of(it) },
            media?.let { Members.media.of(it) },
            mediaCol?.let { Members.mediaCol.of(it) }
        )
    }

    /** Type for attributes of this collection */
    class Type(override val name: String) : AttributeCollection.Type<JobSheetsCol>(Members)

    /** All member names as strings. */
    object Name {
        /** "job-sheets" member name */
        const val jobSheets = "job-sheets"
        /** "media" member name */
        const val media = "media"
        /** "media-col" member name */
        const val mediaCol = "media-col"
    }

    /** Builder for immutable [JobSheetsCol] objects. */
    class Builder() {
        /** Constructs a new [Builder] pre-initialized with values in [source]. */
        constructor(source: JobSheetsCol) : this() {
            jobSheets = source.jobSheets
            media = source.media
            mediaCol = source.mediaCol
        }
        /** May contain any keyword from [JobSheet] or a name. */
        var jobSheets: String? = null
        /** May contain any keyword from [Media] or a name. */
        var media: String? = null
        var mediaCol: MediaCol? = null

        /** Return a new [JobSheetsCol] object containing all values initialized in this builder. */
        fun build() = JobSheetsCol(
            jobSheets,
            media,
            mediaCol
        )
    }

    companion object Members : AttributeCollection.Converter<JobSheetsCol> {
        override fun convert(attributes: List<Attribute<*>>): JobSheetsCol =
            JobSheetsCol(
                extractOne(attributes, jobSheets),
                extractOne(attributes, media),
                extractOne(attributes, mediaCol),
                _encoded = attributes)
        /**
         * "job-sheets" member type.
         * May contain any keyword from [JobSheet] or a name.
         */
        @JvmField val jobSheets = KeywordType(Name.jobSheets)
        /**
         * "media" member type.
         * May contain any keyword from [Media] or a name.
         */
        @JvmField val media = KeywordType(Name.media)
        /**
         * "media-col" member type.
         */
        @JvmField val mediaCol = MediaCol.Type(Name.mediaCol)
    }
}
