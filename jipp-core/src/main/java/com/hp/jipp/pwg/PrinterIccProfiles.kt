// Copyright 2018 HP Development Company, L.P.
// SPDX-License-Identifier: MIT
//
// DO NOT MODIFY. Code is auto-generated by genTypes.py. Content taken from registry at
// https://www.iana.org/assignments/ipp-registrations/ipp-registrations.xml, updated on 2018-04-06
@file:Suppress("MaxLineLength", "WildcardImport")

package com.hp.jipp.pwg

import com.hp.jipp.encoding.* // ktlint-disable no-wildcard-imports

/**
 * Data object corresponding to a "printer-icc-profiles" collection as defined in:
 * [PWG5100.13](http://ftp.pwg.org/pub/pwg/candidates/cs-ippjobprinterext3v10-20120727-5100.13.pdf).
 */
@Suppress("RedundantCompanionReference", "unused")
data class PrinterIccProfiles
@JvmOverloads constructor(
    val profileName: String? = null,
    val profileUrl: java.net.URI? = null,
    /** Encoded form, if known. */
    val _encoded: List<Attribute<*>>? = null
) : AttributeCollection {

    /** Produce an attribute list from members, or return the original [_encoded] attribute list if present. */
    override val attributes: List<Attribute<*>> by lazy {
        _encoded ?: listOfNotNull(
            profileName?.let { Members.profileName.of(it) },
            profileUrl?.let { Members.profileUrl.of(it) }
        )
    }

    /** Type for attributes of this collection */
    class Type(override val name: String) : AttributeCollection.Type<PrinterIccProfiles>(Members)

    /** All member names as strings. */
    object Name {
        /** "profile-name" member name */
        const val profileName = "profile-name"
        /** "profile-url" member name */
        const val profileUrl = "profile-url"
    }

    /** Builder for immutable [PrinterIccProfiles] objects. */
    class Builder() {
        /** Constructs a new [Builder] pre-initialized with values in [source]. */
        constructor(source: PrinterIccProfiles) : this() {
            profileName = source.profileName
            profileUrl = source.profileUrl
        }
        var profileName: String? = null
        var profileUrl: java.net.URI? = null

        /** Return a new [PrinterIccProfiles] object containing all values initialized in this builder. */
        fun build() = PrinterIccProfiles(
            profileName,
            profileUrl
        )
    }

    companion object Members : AttributeCollection.Converter<PrinterIccProfiles> {
        override fun convert(attributes: List<Attribute<*>>): PrinterIccProfiles =
            PrinterIccProfiles(
                extractOne(attributes, profileName)?.value,
                extractOne(attributes, profileUrl),
                _encoded = attributes)
        /**
         * "profile-name" member type.
         */
        @JvmField val profileName = NameType(Name.profileName)
        /**
         * "profile-url" member type.
         */
        @JvmField val profileUrl = UriType(Name.profileUrl)
    }
}
