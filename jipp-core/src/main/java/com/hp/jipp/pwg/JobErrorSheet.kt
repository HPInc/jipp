// Copyright 2018 HP Development Company, L.P.
// SPDX-License-Identifier: MIT
//
// DO NOT MODIFY. Code is auto-generated by genTypes.py. Content taken from registry at
// https://www.iana.org/assignments/ipp-registrations/ipp-registrations.xml, updated on 2018-04-06
@file:Suppress("MaxLineLength", "WildcardImport")

package com.hp.jipp.pwg

import com.hp.jipp.encoding.* // ktlint-disable no-wildcard-imports

/**
 * Data object corresponding to a "job-error-sheet" collection as defined in:
 * [PWG5100.3](http://ftp.pwg.org/pub/pwg/candidates/cs-ippprodprint10-20010212-5100.3.pdf).
 */
@Suppress("RedundantCompanionReference", "unused")
data class JobErrorSheet
@JvmOverloads constructor(
    /** May contain any keyword from [JobErrorSheetType] or a name. */
    val jobErrorSheetType: String? = null,
    /** May contain any keyword from [JobErrorSheetWhen]. */
    val jobErrorSheetWhen: String? = null,
    /** May contain any keyword from [Media] or a name. */
    val media: String? = null,
    val mediaCol: MediaCol? = null,
    /** Encoded form, if known. */
    val _encoded: List<Attribute<*>>? = null
) : AttributeCollection {

    /** Produce an attribute list from members, or return the original [_encoded] attribute list if present. */
    override val attributes: List<Attribute<*>> by lazy {
        _encoded ?: listOfNotNull(
            jobErrorSheetType?.let { Members.jobErrorSheetType.of(it) },
            jobErrorSheetWhen?.let { Members.jobErrorSheetWhen.of(it) },
            media?.let { Members.media.of(it) },
            mediaCol?.let { Members.mediaCol.of(it) }
        )
    }

    /** Type for attributes of this collection */
    class Type(override val name: String) : AttributeCollection.Type<JobErrorSheet>(Members)

    /** All member names as strings. */
    object Name {
        /** "job-error-sheet-type" member name */
        const val jobErrorSheetType = "job-error-sheet-type"
        /** "job-error-sheet-when" member name */
        const val jobErrorSheetWhen = "job-error-sheet-when"
        /** "media" member name */
        const val media = "media"
        /** "media-col" member name */
        const val mediaCol = "media-col"
    }

    /** Builder for immutable [JobErrorSheet] objects. */
    class Builder() {
        /** Constructs a new [Builder] pre-initialized with values in [source]. */
        constructor(source: JobErrorSheet) : this() {
            jobErrorSheetType = source.jobErrorSheetType
            jobErrorSheetWhen = source.jobErrorSheetWhen
            media = source.media
            mediaCol = source.mediaCol
        }
        /** May contain any keyword from [JobErrorSheetType] or a name. */
        var jobErrorSheetType: String? = null
        /** May contain any keyword from [JobErrorSheetWhen]. */
        var jobErrorSheetWhen: String? = null
        /** May contain any keyword from [Media] or a name. */
        var media: String? = null
        var mediaCol: MediaCol? = null

        /** Return a new [JobErrorSheet] object containing all values initialized in this builder. */
        fun build() = JobErrorSheet(
            jobErrorSheetType,
            jobErrorSheetWhen,
            media,
            mediaCol
        )
    }

    companion object Members : AttributeCollection.Converter<JobErrorSheet> {
        override fun convert(attributes: List<Attribute<*>>): JobErrorSheet =
            JobErrorSheet(
                extractOne(attributes, jobErrorSheetType),
                extractOne(attributes, jobErrorSheetWhen),
                extractOne(attributes, media),
                extractOne(attributes, mediaCol),
                _encoded = attributes)
        /**
         * "job-error-sheet-type" member type.
         * May contain any keyword from [JobErrorSheetType] or a name.
         */
        @JvmField val jobErrorSheetType = KeywordType(Name.jobErrorSheetType)
        /**
         * "job-error-sheet-when" member type.
         * May contain any keyword from [JobErrorSheetWhen].
         */
        @JvmField val jobErrorSheetWhen = KeywordType(Name.jobErrorSheetWhen)
        /**
         * "media" member type.
         * May contain any keyword from [Media] or a name.
         */
        @JvmField val media = KeywordType(Name.media)
        /**
         * "media-col" member type.
         */
        @JvmField val mediaCol = MediaCol.Type(Name.mediaCol)
    }
}
