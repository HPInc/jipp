// Copyright 2018 HP Development Company, L.P.
// SPDX-License-Identifier: MIT
//
// DO NOT MODIFY. Code is auto-generated by genTypes.py. Content taken from registry at
// https://www.iana.org/assignments/ipp-registrations/ipp-registrations.xml, updated on 2018-04-06
@file:Suppress("MaxLineLength", "WildcardImport")

package com.hp.jipp.pwg

import com.hp.jipp.encoding.* // ktlint-disable no-wildcard-imports

/**
 * Data object corresponding to a "printer-xri-supported" collection as defined in:
 * [RFC3380](http://www.iana.org/go/rfc3380).
 */
@Suppress("RedundantCompanionReference", "unused")
data class PrinterXriSupported
@JvmOverloads constructor(
    /** May contain any keyword from [XriAuthenticationSupported]. */
    val xriAuthentication: String? = null,
    /** May contain any keyword from [XriSecuritySupported]. */
    val xriSecurity: String? = null,
    val xriUri: java.net.URI? = null,
    /** Encoded form, if known. */
    val _encoded: List<Attribute<*>>? = null
) : AttributeCollection {

    /** Produce an attribute list from members, or return the original [_encoded] attribute list if present. */
    override val attributes: List<Attribute<*>> by lazy {
        _encoded ?: listOfNotNull(
            xriAuthentication?.let { Members.xriAuthentication.of(it) },
            xriSecurity?.let { Members.xriSecurity.of(it) },
            xriUri?.let { Members.xriUri.of(it) }
        )
    }

    /** Type for attributes of this collection */
    class Type(override val name: String) : AttributeCollection.Type<PrinterXriSupported>(Members)

    /** All member names as strings. */
    object Name {
        /** "xri-authentication" member name */
        const val xriAuthentication = "xri-authentication"
        /** "xri-security" member name */
        const val xriSecurity = "xri-security"
        /** "xri-uri" member name */
        const val xriUri = "xri-uri"
    }

    /** Builder for immutable [PrinterXriSupported] objects. */
    class Builder() {
        /** Constructs a new [Builder] pre-initialized with values in [source]. */
        constructor(source: PrinterXriSupported) : this() {
            xriAuthentication = source.xriAuthentication
            xriSecurity = source.xriSecurity
            xriUri = source.xriUri
        }
        /** May contain any keyword from [XriAuthenticationSupported]. */
        var xriAuthentication: String? = null
        /** May contain any keyword from [XriSecuritySupported]. */
        var xriSecurity: String? = null
        var xriUri: java.net.URI? = null

        /** Return a new [PrinterXriSupported] object containing all values initialized in this builder. */
        fun build() = PrinterXriSupported(
            xriAuthentication,
            xriSecurity,
            xriUri
        )
    }

    companion object Members : AttributeCollection.Converter<PrinterXriSupported> {
        override fun convert(attributes: List<Attribute<*>>): PrinterXriSupported =
            PrinterXriSupported(
                extractOne(attributes, xriAuthentication),
                extractOne(attributes, xriSecurity),
                extractOne(attributes, xriUri),
                _encoded = attributes)
        /**
         * "xri-authentication" member type.
         * May contain any keyword from [XriAuthenticationSupported].
         */
        @JvmField val xriAuthentication = KeywordType(Name.xriAuthentication)
        /**
         * "xri-security" member type.
         * May contain any keyword from [XriSecuritySupported].
         */
        @JvmField val xriSecurity = KeywordType(Name.xriSecurity)
        /**
         * "xri-uri" member type.
         */
        @JvmField val xriUri = UriType(Name.xriUri)
    }
}
